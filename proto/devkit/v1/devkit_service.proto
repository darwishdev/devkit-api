syntax = "proto3";

// INJECT IMPORTS
import "devkit/v1/company_company.proto";

import "devkit/v1/service_options.proto";
import "devkit/v1/accounts_user.proto";
import "devkit/v1/accounts_auth.proto";
import "devkit/v1/public_email.proto";
import "devkit/v1/public_translation.proto";
import "devkit/v1/public_setting.proto";
import "devkit/v1/public_icon.proto";
import "devkit/v1/public_storage.proto";
import "devkit/v1/accounts_role.proto";
package devkit.v1;

service DevkitService {
	// INJECT METHODS
rpc CompanyDeleteRestore(CompanyDeleteRestoreRequest) returns (CompanyDeleteRestoreResponse) {  }


rpc CompanyList(CompanyListRequest) returns (CompanyListResponse) {  option idempotency_level = NO_SIDE_EFFECTS;  }


rpc CompanyCreateUpdate(CompanyCreateUpdateRequest) returns (CompanyCreateUpdateResponse) {  }



//////////////////////////////////////////////////////////////////////////////////////////////
// public 
//////////////////////////////////////////////////////////////////////////////////////////////
    // settings
    rpc SettingUpdate(SettingUpdateRequest) returns (SettingUpdateResponse) {}
    rpc SettingFindForUpdate(SettingFindForUpdateRequest) returns (SettingFindForUpdateResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
    }

    // icons
    rpc IconList(IconListRequest) returns (IconListResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authentication) = true;
    }
    rpc IconCreateUpdateBulk(IconCreateUpdateBulkRequest) returns (IconCreateUpdateBulkResponse)  {} 
    rpc FileList(FileListRequest) returns (FileListResponse) {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc FileCreate(FileCreateRequest) returns (FileCreateResponse) {}
    rpc FileCreateBulk(FileCreateBulkRequest) returns (FileCreateBulkResponse) {}
    rpc FileDelete(FileDeleteRequest) returns (FileDeleteResponse) {}
    rpc BucketList(BucketListRequest) returns (BucketListResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc BucketCreateUpdate(BucketCreateUpdateRequest) returns (BucketCreateUpdateResponse) {}
    rpc ImportTable(ImportTableRequest) returns (ImportTableResponse) {}
    // emails
    rpc EmailSend(EmailSendRequest) returns (EmailSendResponse) {}
    // translations
    rpc TranslationCreateUpdateBulk(TranslationCreateUpdateBulkRequest) returns (TranslationCreateUpdateBulkResponse) {}
    rpc TranslationDelete(TranslationDeleteRequest) returns (TranslationDeleteResponse) {}
    rpc TranslationList(TranslationListRequest) returns (TranslationListResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authentication) = true;
    }
//////////////////////////////////////////////////////////////////////////////////////////////
// accounts
//////////////////////////////////////////////////////////////////////////////////////////////
    // roles
//*******************************************************************************************//
    rpc RoleList(RoleListRequest) returns (RoleListResponse) {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc RoleFindForUpdate(RoleFindForUpdateRequest) returns (RoleFindForUpdateResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authorization) = true;
    }
    rpc RoleListInput(RoleListInputRequest) returns (RoleListInputResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authorization) = true;
    }

    rpc RoleCreateUpdate(RoleCreateUpdateRequest) returns (RoleCreateUpdateResponse) {}

    rpc RoleDelete(RoleDeleteRequest) returns (RoleDeleteResponse) {}
    rpc RoleDeleteRestore(RoleDeleteRestoreRequest) returns (RoleDeleteRestoreResponse) {}
//*******************************************************************************************//
    // users
//*******************************************************************************************//
    rpc UserList(UserListRequest) returns (UserListResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
    }
    rpc UserListInput(UserListInputRequest) returns (UserListInputResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authorization) = true;
    }
    rpc UserFindForUpdate(UserFindForUpdateRequest) returns (UserFindForUpdateResponse)  {
        option idempotency_level = NO_SIDE_EFFECTS;
        option (skip_authorization) = true;
    }
    rpc UserCreateUpdate(UserCreateUpdateRequest) returns (UserCreateUpdateResponse) {}
    rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse) {}
    rpc UserDeleteRestore(UserDeleteRestoreRequest) returns (UserDeleteRestoreResponse) {}
//*******************************************************************************************//
    // auth
//*******************************************************************************************//
    rpc AuthLoginProviderCallback(AuthLoginProviderCallbackRequest) returns (AuthLoginProviderCallbackResponse) {
        option (skip_authentication) = true;
    }
    rpc AuthResetPassword(AuthResetPasswordRequest) returns (AuthResetPasswordResponse) {
        option (skip_authentication) = true;
    }
    rpc AuthResetPasswordEmail(AuthResetPasswordEmailRequest) returns (AuthResetPasswordEmailResponse) {
        option (skip_authentication) = true;
    }
    rpc AuthLoginProvider(AuthLoginProviderRequest) returns (AuthLoginProviderResponse) {
        option (skip_authentication) = true;
    }
    rpc AuthInvite(AuthInviteRequest) returns (AuthInviteResponse) {}
    rpc AuthAuthorize(AuthAuthorizeRequest) returns (AuthAuthorizeResponse) {
        option (skip_authorization) = true;
    }
    rpc AuthLogin(AuthLoginRequest) returns (AuthLoginResponse) {
        option (skip_authentication) = true;
    }
    rpc AuthRegister(AuthRegisterRequest) returns (AuthRegisterResponse) {
        option (skip_authentication) = true;
    }

}
