syntax = "proto3";
import "google/protobuf/struct.proto";
import "buf/validate/validate.proto";

package devkit.v1;
message UploadFileRequest {
  string path = 1 [
  (buf.validate.field).string.min_len = 2
  ];
  string bucket_name = 2 [
  (buf.validate.field).string.min_len = 2
  ];
  bytes reader = 3;
  string file_type = 4;
}
message UploadFilesRequest {
  repeated UploadFileRequest files = 1;
}

message UploadFileResponse {
  string path = 1;
}

message UploadFilesResponse {
  repeated string path = 1;
}

message ImportTableRequest{
  string table_name = 1 [
  (buf.validate.field).string.min_len = 2
  ];
  string schema_name = 2;
  string sheet_name = 3;
  bytes reader = 4;
}

message ImportTableResponse {
  string message = 1;
}

message StorageBucket {
  string id = 1;
  string name = 2;
  bool public = 3;
  string created_at = 4;
  string updated_at = 5;
  // Optional fields
  string owner = 6;
  int64 file_size_limit = 7;
  repeated string allowed_mime_types = 8; 
}

message BucketCreateUpdateRequest{
  string bucket_name = 1;
  bool is_pulic = 2;
  string file_size_limit = 3 [(buf.validate.field).string.pattern = "^[0-9]+$"];
  repeated string allowed_file_types = 4;
  bool is_update = 5;
}
message BucketCreateUpdateResponse {
   StorageBucket bucket = 1 ;
}
message BucketsListRequest{
}
message BucketsListResponse {
  repeated StorageBucket buckets = 1 ;
}

message FileObject {
  string name = 1;
  string bucket_id = 2;
  string owner = 3;
  string id = 4;
  string updated_at = 5;
  string created_at = 6;
  string last_accessed_at = 7;
  google.protobuf.Struct metadata = 8; // Use google.protobuf.Struct for dynamic metadata
  StorageBucket buckets = 9; 
}

message FilesListRequest {
  string bucket_id = 1;
  string query_path = 2;
  int32 limit = 3;
  int32 offest = 4;
}

message FilesListResponse {
  repeated FileObject files = 1;
}
message FileUploadResponse {
  string key = 1;
  string message = 2;
  bytes data = 3;
  string status_code = 4; // Use snake_case for field names
  string error = 5;
}

message FilesDeleteRequest {
  string bucket_id = 1  [
  (buf.validate.field).string.min_len = 2
  ];
  repeated  string files_paths = 2 [(buf.validate.field).repeated = {
    unique: true,
    max_items: 500,
  }];

}

message FilesDeleteResponse {
  repeated FileUploadResponse responses = 1;
}
