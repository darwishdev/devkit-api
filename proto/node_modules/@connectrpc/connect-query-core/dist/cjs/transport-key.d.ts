import type { Transport } from "@connectrpc/connect";
declare const staticKeySymbol: unique symbol;
interface TransportWithStaticKey extends Transport {
    [staticKeySymbol]?: string;
}
/**
 * For a given Transport, create a string key that is suitable for a Query Key
 * in TanStack Query.
 *
 * This function will return a unique string for every reference.
 */
export declare function createTransportKey(transport: TransportWithStaticKey): string;
/**
 * Enhances a given transport with a static query key that is used in any associated queries. This may be necessary
 * in SSR contexts where transports are used on both client and server but they need to be considered
 * the same when it comes to the query cache.
 */
export declare function addStaticKeyToTransport(transport: Transport, key: string): TransportWithStaticKey;
export {};
//# sourceMappingURL=transport-key.d.ts.map