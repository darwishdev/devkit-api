import type { DescMessage, DescMethodUnary, MessageInitShape, MessageShape } from "@bufbuild/protobuf";
/**
 * Throws an error with the provided message when the condition is `false`
 */
export declare function assert(condition: boolean, message: string): asserts condition;
/**
 * Verifies that the provided input is a valid AbortController
 */
export declare const isAbortController: (input: unknown) => input is AbortController;
/**
 * @see `Updater` from `@tanstack/react-query`
 */
export type ConnectUpdater<O extends DescMessage> = MessageInitShape<O> | undefined | ((prev?: MessageShape<O>) => MessageShape<O> | undefined);
/**
 * This helper makes sure that the type for the original response message is returned.
 */
export declare const createProtobufSafeUpdater: <O extends DescMessage>(schema: Pick<DescMethodUnary<never, O>, "output">, updater: ConnectUpdater<O>) => (prev?: MessageShape<O>) => MessageShape<O> | undefined;
//# sourceMappingURL=utils.d.ts.map