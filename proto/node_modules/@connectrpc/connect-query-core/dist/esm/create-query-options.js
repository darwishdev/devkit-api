// Copyright 2021-2023 The Connect Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
import { create } from "@bufbuild/protobuf";
import { skipToken } from "@tanstack/query-core";
import { callUnaryMethod } from "./call-unary-method.js";
import { createConnectQueryKey } from "./connect-query-key.js";
import { createStructuralSharing } from "./structural-sharing.js";
function createUnaryQueryFn(transport, schema, input) {
    return async (context) => {
        return callUnaryMethod(transport, schema, input, {
            signal: context.signal,
        });
    };
}
export function createQueryOptions(schema, input, { transport, }) {
    const queryKey = createConnectQueryKey({
        schema,
        input: input ?? create(schema.input),
        transport,
        cardinality: "finite",
    });
    const structuralSharing = createStructuralSharing(schema.output);
    const queryFn = input === skipToken
        ? skipToken
        : createUnaryQueryFn(transport, schema, input);
    return {
        queryKey,
        queryFn,
        structuralSharing,
    };
}
//# sourceMappingURL=create-query-options.js.map