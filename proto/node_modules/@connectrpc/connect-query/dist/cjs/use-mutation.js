"use strict";
// Copyright 2021-2023 The Connect Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMutation = useMutation;
const connect_query_core_1 = require("@connectrpc/connect-query-core");
const react_query_1 = require("@tanstack/react-query");
const react_1 = require("react");
const use_transport_js_1 = require("./use-transport.js");
/**
 * Query the method provided. Maps to useMutation on tanstack/react-query
 */
function useMutation(schema, { transport, ...queryOptions } = {}) {
    const transportFromCtx = (0, use_transport_js_1.useTransport)();
    const transportToUse = transport ?? transportFromCtx;
    const mutationFn = (0, react_1.useCallback)(async (input) => (0, connect_query_core_1.callUnaryMethod)(transportToUse, schema, input), [transportToUse, schema]);
    return (0, react_query_1.useMutation)({
        ...queryOptions,
        mutationFn,
    });
}
//# sourceMappingURL=use-mutation.js.map